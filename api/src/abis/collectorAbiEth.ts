export const collectorAbiEth = [
	{
		type: "constructor",
		inputs: [
			{ name: "wsteth_", type: "address", internalType: "address" },
			{ name: "weth_", type: "address", internalType: "address" },
			{ name: "steth_", type: "address", internalType: "address" },
			{ name: "ena_", type: "address", internalType: "address" },
			{ name: "susde_", type: "address", internalType: "address" },
			{
				name: "_wstethOracle",
				type: "address",
				internalType: "contract IAggregatorV3",
			},
			{
				name: "_wethToUSDOracle",
				type: "address",
				internalType: "contract IAggregatorV3",
			},
			{ name: "admin_", type: "address", internalType: "address" },
		],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "ADMIN_DELEGATE_ROLE",
		inputs: [],
		outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "ADMIN_ROLE",
		inputs: [],
		outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "D18",
		inputs: [],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "D9",
		inputs: [],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "DEFAULT_ADMIN_ROLE",
		inputs: [],
		outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "OPERATOR",
		inputs: [],
		outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "Q96",
		inputs: [],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "addCollectors",
		inputs: [{ name: "collector_", type: "address", internalType: "address" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "collect",
		inputs: [
			{ name: "user", type: "address", internalType: "address" },
			{ name: "vaults", type: "address[]", internalType: "address[]" },
		],
		outputs: [
			{
				name: "responses",
				type: "tuple[]",
				internalType: "struct Collector.Response[]",
				components: [
					{ name: "vault", type: "address", internalType: "address" },
					{ name: "balance", type: "uint256", internalType: "uint256" },
					{
						name: "underlyingTokens",
						type: "address[]",
						internalType: "address[]",
					},
					{
						name: "underlyingAmounts",
						type: "uint256[]",
						internalType: "uint256[]",
					},
					{
						name: "underlyingTokenDecimals",
						type: "uint8[]",
						internalType: "uint8[]",
					},
					{
						name: "depositRatiosX96",
						type: "uint128[]",
						internalType: "uint128[]",
					},
					{
						name: "withdrawalRatiosX96",
						type: "uint128[]",
						internalType: "uint128[]",
					},
					{ name: "pricesX96", type: "uint256[]", internalType: "uint256[]" },
					{ name: "totalSupply", type: "uint256", internalType: "uint256" },
					{
						name: "maximalTotalSupply",
						type: "uint256",
						internalType: "uint256",
					},
					{ name: "userBalanceETH", type: "uint256", internalType: "uint256" },
					{ name: "userBalanceUSDC", type: "uint256", internalType: "uint256" },
					{ name: "totalValueETH", type: "uint256", internalType: "uint256" },
					{ name: "totalValueUSDC", type: "uint256", internalType: "uint256" },
					{
						name: "totalValueWSTETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "totalValueBaseToken",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyUSDC",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyWSTETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyBaseToken",
						type: "uint256",
						internalType: "uint256",
					},
					{ name: "lpPriceD18", type: "uint256", internalType: "uint256" },
					{ name: "lpPriceETHD18", type: "uint256", internalType: "uint256" },
					{
						name: "lpPriceWSTETHD18",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "lpPriceBaseTokenD18",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "shouldCloseWithdrawalRequest",
						type: "bool",
						internalType: "bool",
					},
					{
						name: "withdrawalRequest",
						type: "tuple",
						internalType: "struct IVault.WithdrawalRequest",
						components: [
							{ name: "to", type: "address", internalType: "address" },
							{ name: "lpAmount", type: "uint256", internalType: "uint256" },
							{ name: "tokensHash", type: "bytes32", internalType: "bytes32" },
							{
								name: "minAmounts",
								type: "uint256[]",
								internalType: "uint256[]",
							},
							{ name: "deadline", type: "uint256", internalType: "uint256" },
							{ name: "timestamp", type: "uint256", internalType: "uint256" },
						],
					},
					{ name: "isDefi", type: "bool", internalType: "bool" },
				],
			},
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "convertBaseTokenPriceToWethPrice",
		inputs: [
			{ name: "priceX96", type: "uint256", internalType: "uint256" },
			{ name: "token", type: "address", internalType: "address" },
		],
		outputs: [
			{ name: "wethPriceX96", type: "uint256", internalType: "uint256" },
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "convertTokenIntoEth",
		inputs: [
			{
				name: "responses",
				type: "tuple[]",
				internalType: "struct Collector.Response[]",
				components: [
					{ name: "vault", type: "address", internalType: "address" },
					{ name: "balance", type: "uint256", internalType: "uint256" },
					{
						name: "underlyingTokens",
						type: "address[]",
						internalType: "address[]",
					},
					{
						name: "underlyingAmounts",
						type: "uint256[]",
						internalType: "uint256[]",
					},
					{
						name: "underlyingTokenDecimals",
						type: "uint8[]",
						internalType: "uint8[]",
					},
					{
						name: "depositRatiosX96",
						type: "uint128[]",
						internalType: "uint128[]",
					},
					{
						name: "withdrawalRatiosX96",
						type: "uint128[]",
						internalType: "uint128[]",
					},
					{ name: "pricesX96", type: "uint256[]", internalType: "uint256[]" },
					{ name: "totalSupply", type: "uint256", internalType: "uint256" },
					{
						name: "maximalTotalSupply",
						type: "uint256",
						internalType: "uint256",
					},
					{ name: "userBalanceETH", type: "uint256", internalType: "uint256" },
					{ name: "userBalanceUSDC", type: "uint256", internalType: "uint256" },
					{ name: "totalValueETH", type: "uint256", internalType: "uint256" },
					{ name: "totalValueUSDC", type: "uint256", internalType: "uint256" },
					{
						name: "totalValueWSTETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "totalValueBaseToken",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyUSDC",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyWSTETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyBaseToken",
						type: "uint256",
						internalType: "uint256",
					},
					{ name: "lpPriceD18", type: "uint256", internalType: "uint256" },
					{ name: "lpPriceETHD18", type: "uint256", internalType: "uint256" },
					{
						name: "lpPriceWSTETHD18",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "lpPriceBaseTokenD18",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "shouldCloseWithdrawalRequest",
						type: "bool",
						internalType: "bool",
					},
					{
						name: "withdrawalRequest",
						type: "tuple",
						internalType: "struct IVault.WithdrawalRequest",
						components: [
							{ name: "to", type: "address", internalType: "address" },
							{ name: "lpAmount", type: "uint256", internalType: "uint256" },
							{ name: "tokensHash", type: "bytes32", internalType: "bytes32" },
							{
								name: "minAmounts",
								type: "uint256[]",
								internalType: "uint256[]",
							},
							{ name: "deadline", type: "uint256", internalType: "uint256" },
							{ name: "timestamp", type: "uint256", internalType: "uint256" },
						],
					},
					{ name: "isDefi", type: "bool", internalType: "bool" },
				],
			},
			{ name: "token", type: "address", internalType: "address" },
			{ name: "amount", type: "uint256", internalType: "uint256" },
		],
		outputs: [{ name: "ethAmount", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "convertWethToUSDC",
		inputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "ena",
		inputs: [],
		outputs: [{ name: "", type: "address", internalType: "address" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "fetchDepositAmounts",
		inputs: [
			{ name: "amounts", type: "uint256[]", internalType: "uint256[]" },
			{ name: "vault", type: "address", internalType: "address" },
			{ name: "user", type: "address", internalType: "address" },
		],
		outputs: [
			{
				name: "r",
				type: "tuple",
				internalType: "struct Collector.FetchDepositAmountsResponse",
				components: [
					{ name: "isDepositPossible", type: "bool", internalType: "bool" },
					{
						name: "isDepositorWhitelisted",
						type: "bool",
						internalType: "bool",
					},
					{ name: "ratiosD18", type: "uint256[]", internalType: "uint256[]" },
					{ name: "tokens", type: "address[]", internalType: "address[]" },
					{
						name: "expectedLpAmount",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "expectedLpAmountUSDC",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "expectedAmounts",
						type: "uint256[]",
						internalType: "uint256[]",
					},
					{
						name: "expectedAmountsUSDC",
						type: "uint256[]",
						internalType: "uint256[]",
					},
				],
			},
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "fetchDepositWrapperParams",
		inputs: [
			{ name: "vault", type: "address", internalType: "address" },
			{ name: "wrapper", type: "address", internalType: "address" },
			{ name: "token", type: "address", internalType: "address" },
			{ name: "amount", type: "uint256", internalType: "uint256" },
		],
		outputs: [
			{ name: "isDepositPossible", type: "bool", internalType: "bool" },
			{ name: "isDepositorWhitelisted", type: "bool", internalType: "bool" },
			{ name: "isWhitelistedToken", type: "bool", internalType: "bool" },
			{ name: "lpAmount", type: "uint256", internalType: "uint256" },
			{ name: "depositValueUSDC", type: "uint256", internalType: "uint256" },
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "fetchWithdrawalAmounts",
		inputs: [
			{ name: "lpAmount", type: "uint256", internalType: "uint256" },
			{ name: "vault", type: "address", internalType: "address" },
		],
		outputs: [
			{ name: "expectedAmounts", type: "uint256[]", internalType: "uint256[]" },
			{
				name: "expectedAmountsUSDC",
				type: "uint256[]",
				internalType: "uint256[]",
			},
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "getRoleAdmin",
		inputs: [{ name: "role", type: "bytes32", internalType: "bytes32" }],
		outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "getRoleMember",
		inputs: [
			{ name: "role", type: "bytes32", internalType: "bytes32" },
			{ name: "index", type: "uint256", internalType: "uint256" },
		],
		outputs: [{ name: "", type: "address", internalType: "address" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "getRoleMemberCount",
		inputs: [{ name: "role", type: "bytes32", internalType: "bytes32" }],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "getVaultResponse",
		inputs: [
			{
				name: "responses",
				type: "tuple[]",
				internalType: "struct Collector.Response[]",
				components: [
					{ name: "vault", type: "address", internalType: "address" },
					{ name: "balance", type: "uint256", internalType: "uint256" },
					{
						name: "underlyingTokens",
						type: "address[]",
						internalType: "address[]",
					},
					{
						name: "underlyingAmounts",
						type: "uint256[]",
						internalType: "uint256[]",
					},
					{
						name: "underlyingTokenDecimals",
						type: "uint8[]",
						internalType: "uint8[]",
					},
					{
						name: "depositRatiosX96",
						type: "uint128[]",
						internalType: "uint128[]",
					},
					{
						name: "withdrawalRatiosX96",
						type: "uint128[]",
						internalType: "uint128[]",
					},
					{ name: "pricesX96", type: "uint256[]", internalType: "uint256[]" },
					{ name: "totalSupply", type: "uint256", internalType: "uint256" },
					{
						name: "maximalTotalSupply",
						type: "uint256",
						internalType: "uint256",
					},
					{ name: "userBalanceETH", type: "uint256", internalType: "uint256" },
					{ name: "userBalanceUSDC", type: "uint256", internalType: "uint256" },
					{ name: "totalValueETH", type: "uint256", internalType: "uint256" },
					{ name: "totalValueUSDC", type: "uint256", internalType: "uint256" },
					{
						name: "totalValueWSTETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "totalValueBaseToken",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyUSDC",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyWSTETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyBaseToken",
						type: "uint256",
						internalType: "uint256",
					},
					{ name: "lpPriceD18", type: "uint256", internalType: "uint256" },
					{ name: "lpPriceETHD18", type: "uint256", internalType: "uint256" },
					{
						name: "lpPriceWSTETHD18",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "lpPriceBaseTokenD18",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "shouldCloseWithdrawalRequest",
						type: "bool",
						internalType: "bool",
					},
					{
						name: "withdrawalRequest",
						type: "tuple",
						internalType: "struct IVault.WithdrawalRequest",
						components: [
							{ name: "to", type: "address", internalType: "address" },
							{ name: "lpAmount", type: "uint256", internalType: "uint256" },
							{ name: "tokensHash", type: "bytes32", internalType: "bytes32" },
							{
								name: "minAmounts",
								type: "uint256[]",
								internalType: "uint256[]",
							},
							{ name: "deadline", type: "uint256", internalType: "uint256" },
							{ name: "timestamp", type: "uint256", internalType: "uint256" },
						],
					},
					{ name: "isDefi", type: "bool", internalType: "bool" },
				],
			},
			{ name: "vault", type: "address", internalType: "address" },
		],
		outputs: [
			{
				name: "r",
				type: "tuple",
				internalType: "struct Collector.Response",
				components: [
					{ name: "vault", type: "address", internalType: "address" },
					{ name: "balance", type: "uint256", internalType: "uint256" },
					{
						name: "underlyingTokens",
						type: "address[]",
						internalType: "address[]",
					},
					{
						name: "underlyingAmounts",
						type: "uint256[]",
						internalType: "uint256[]",
					},
					{
						name: "underlyingTokenDecimals",
						type: "uint8[]",
						internalType: "uint8[]",
					},
					{
						name: "depositRatiosX96",
						type: "uint128[]",
						internalType: "uint128[]",
					},
					{
						name: "withdrawalRatiosX96",
						type: "uint128[]",
						internalType: "uint128[]",
					},
					{ name: "pricesX96", type: "uint256[]", internalType: "uint256[]" },
					{ name: "totalSupply", type: "uint256", internalType: "uint256" },
					{
						name: "maximalTotalSupply",
						type: "uint256",
						internalType: "uint256",
					},
					{ name: "userBalanceETH", type: "uint256", internalType: "uint256" },
					{ name: "userBalanceUSDC", type: "uint256", internalType: "uint256" },
					{ name: "totalValueETH", type: "uint256", internalType: "uint256" },
					{ name: "totalValueUSDC", type: "uint256", internalType: "uint256" },
					{
						name: "totalValueWSTETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "totalValueBaseToken",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyUSDC",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyWSTETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyBaseToken",
						type: "uint256",
						internalType: "uint256",
					},
					{ name: "lpPriceD18", type: "uint256", internalType: "uint256" },
					{ name: "lpPriceETHD18", type: "uint256", internalType: "uint256" },
					{
						name: "lpPriceWSTETHD18",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "lpPriceBaseTokenD18",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "shouldCloseWithdrawalRequest",
						type: "bool",
						internalType: "bool",
					},
					{
						name: "withdrawalRequest",
						type: "tuple",
						internalType: "struct IVault.WithdrawalRequest",
						components: [
							{ name: "to", type: "address", internalType: "address" },
							{ name: "lpAmount", type: "uint256", internalType: "uint256" },
							{ name: "tokensHash", type: "bytes32", internalType: "bytes32" },
							{
								name: "minAmounts",
								type: "uint256[]",
								internalType: "uint256[]",
							},
							{ name: "deadline", type: "uint256", internalType: "uint256" },
							{ name: "timestamp", type: "uint256", internalType: "uint256" },
						],
					},
					{ name: "isDefi", type: "bool", internalType: "bool" },
				],
			},
		],
		stateMutability: "pure",
	},
	{
		type: "function",
		name: "grantRole",
		inputs: [
			{ name: "role", type: "bytes32", internalType: "bytes32" },
			{ name: "account", type: "address", internalType: "address" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "hasRole",
		inputs: [
			{ name: "role", type: "bytes32", internalType: "bytes32" },
			{ name: "account", type: "address", internalType: "address" },
		],
		outputs: [{ name: "", type: "bool", internalType: "bool" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "haveCommon",
		inputs: [
			{ name: "a", type: "address[]", internalType: "address[]" },
			{ name: "b", type: "address[]", internalType: "address[]" },
		],
		outputs: [{ name: "", type: "bool", internalType: "bool" }],
		stateMutability: "pure",
	},
	{
		type: "function",
		name: "isAdmin",
		inputs: [{ name: "sender", type: "address", internalType: "address" }],
		outputs: [{ name: "", type: "bool", internalType: "bool" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "isOneOf",
		inputs: [
			{ name: "x", type: "address", internalType: "address" },
			{ name: "a", type: "address[]", internalType: "address[]" },
		],
		outputs: [{ name: "", type: "bool", internalType: "bool" }],
		stateMutability: "pure",
	},
	{
		type: "function",
		name: "isOperator",
		inputs: [{ name: "sender", type: "address", internalType: "address" }],
		outputs: [{ name: "", type: "bool", internalType: "bool" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "mergeWithDefiCollectors",
		inputs: [
			{ name: "user", type: "address", internalType: "address" },
			{ name: "vaults", type: "address[]", internalType: "address[]" },
			{
				name: "responses",
				type: "tuple[]",
				internalType: "struct Collector.Response[]",
				components: [
					{ name: "vault", type: "address", internalType: "address" },
					{ name: "balance", type: "uint256", internalType: "uint256" },
					{
						name: "underlyingTokens",
						type: "address[]",
						internalType: "address[]",
					},
					{
						name: "underlyingAmounts",
						type: "uint256[]",
						internalType: "uint256[]",
					},
					{
						name: "underlyingTokenDecimals",
						type: "uint8[]",
						internalType: "uint8[]",
					},
					{
						name: "depositRatiosX96",
						type: "uint128[]",
						internalType: "uint128[]",
					},
					{
						name: "withdrawalRatiosX96",
						type: "uint128[]",
						internalType: "uint128[]",
					},
					{ name: "pricesX96", type: "uint256[]", internalType: "uint256[]" },
					{ name: "totalSupply", type: "uint256", internalType: "uint256" },
					{
						name: "maximalTotalSupply",
						type: "uint256",
						internalType: "uint256",
					},
					{ name: "userBalanceETH", type: "uint256", internalType: "uint256" },
					{ name: "userBalanceUSDC", type: "uint256", internalType: "uint256" },
					{ name: "totalValueETH", type: "uint256", internalType: "uint256" },
					{ name: "totalValueUSDC", type: "uint256", internalType: "uint256" },
					{
						name: "totalValueWSTETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "totalValueBaseToken",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyUSDC",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyWSTETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyBaseToken",
						type: "uint256",
						internalType: "uint256",
					},
					{ name: "lpPriceD18", type: "uint256", internalType: "uint256" },
					{ name: "lpPriceETHD18", type: "uint256", internalType: "uint256" },
					{
						name: "lpPriceWSTETHD18",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "lpPriceBaseTokenD18",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "shouldCloseWithdrawalRequest",
						type: "bool",
						internalType: "bool",
					},
					{
						name: "withdrawalRequest",
						type: "tuple",
						internalType: "struct IVault.WithdrawalRequest",
						components: [
							{ name: "to", type: "address", internalType: "address" },
							{ name: "lpAmount", type: "uint256", internalType: "uint256" },
							{ name: "tokensHash", type: "bytes32", internalType: "bytes32" },
							{
								name: "minAmounts",
								type: "uint256[]",
								internalType: "uint256[]",
							},
							{ name: "deadline", type: "uint256", internalType: "uint256" },
							{ name: "timestamp", type: "uint256", internalType: "uint256" },
						],
					},
					{ name: "isDefi", type: "bool", internalType: "bool" },
				],
			},
		],
		outputs: [
			{
				name: "fullResponses",
				type: "tuple[]",
				internalType: "struct Collector.Response[]",
				components: [
					{ name: "vault", type: "address", internalType: "address" },
					{ name: "balance", type: "uint256", internalType: "uint256" },
					{
						name: "underlyingTokens",
						type: "address[]",
						internalType: "address[]",
					},
					{
						name: "underlyingAmounts",
						type: "uint256[]",
						internalType: "uint256[]",
					},
					{
						name: "underlyingTokenDecimals",
						type: "uint8[]",
						internalType: "uint8[]",
					},
					{
						name: "depositRatiosX96",
						type: "uint128[]",
						internalType: "uint128[]",
					},
					{
						name: "withdrawalRatiosX96",
						type: "uint128[]",
						internalType: "uint128[]",
					},
					{ name: "pricesX96", type: "uint256[]", internalType: "uint256[]" },
					{ name: "totalSupply", type: "uint256", internalType: "uint256" },
					{
						name: "maximalTotalSupply",
						type: "uint256",
						internalType: "uint256",
					},
					{ name: "userBalanceETH", type: "uint256", internalType: "uint256" },
					{ name: "userBalanceUSDC", type: "uint256", internalType: "uint256" },
					{ name: "totalValueETH", type: "uint256", internalType: "uint256" },
					{ name: "totalValueUSDC", type: "uint256", internalType: "uint256" },
					{
						name: "totalValueWSTETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "totalValueBaseToken",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyUSDC",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyWSTETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyBaseToken",
						type: "uint256",
						internalType: "uint256",
					},
					{ name: "lpPriceD18", type: "uint256", internalType: "uint256" },
					{ name: "lpPriceETHD18", type: "uint256", internalType: "uint256" },
					{
						name: "lpPriceWSTETHD18",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "lpPriceBaseTokenD18",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "shouldCloseWithdrawalRequest",
						type: "bool",
						internalType: "bool",
					},
					{
						name: "withdrawalRequest",
						type: "tuple",
						internalType: "struct IVault.WithdrawalRequest",
						components: [
							{ name: "to", type: "address", internalType: "address" },
							{ name: "lpAmount", type: "uint256", internalType: "uint256" },
							{ name: "tokensHash", type: "bytes32", internalType: "bytes32" },
							{
								name: "minAmounts",
								type: "uint256[]",
								internalType: "uint256[]",
							},
							{ name: "deadline", type: "uint256", internalType: "uint256" },
							{ name: "timestamp", type: "uint256", internalType: "uint256" },
						],
					},
					{ name: "isDefi", type: "bool", internalType: "bool" },
				],
			},
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "multiCollect",
		inputs: [
			{ name: "users", type: "address[]", internalType: "address[]" },
			{ name: "vaults", type: "address[]", internalType: "address[]" },
		],
		outputs: [
			{
				name: "responses",
				type: "tuple[][]",
				internalType: "struct Collector.Response[][]",
				components: [
					{ name: "vault", type: "address", internalType: "address" },
					{ name: "balance", type: "uint256", internalType: "uint256" },
					{
						name: "underlyingTokens",
						type: "address[]",
						internalType: "address[]",
					},
					{
						name: "underlyingAmounts",
						type: "uint256[]",
						internalType: "uint256[]",
					},
					{
						name: "underlyingTokenDecimals",
						type: "uint8[]",
						internalType: "uint8[]",
					},
					{
						name: "depositRatiosX96",
						type: "uint128[]",
						internalType: "uint128[]",
					},
					{
						name: "withdrawalRatiosX96",
						type: "uint128[]",
						internalType: "uint128[]",
					},
					{ name: "pricesX96", type: "uint256[]", internalType: "uint256[]" },
					{ name: "totalSupply", type: "uint256", internalType: "uint256" },
					{
						name: "maximalTotalSupply",
						type: "uint256",
						internalType: "uint256",
					},
					{ name: "userBalanceETH", type: "uint256", internalType: "uint256" },
					{ name: "userBalanceUSDC", type: "uint256", internalType: "uint256" },
					{ name: "totalValueETH", type: "uint256", internalType: "uint256" },
					{ name: "totalValueUSDC", type: "uint256", internalType: "uint256" },
					{
						name: "totalValueWSTETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "totalValueBaseToken",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyUSDC",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyWSTETH",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "maximalTotalSupplyBaseToken",
						type: "uint256",
						internalType: "uint256",
					},
					{ name: "lpPriceD18", type: "uint256", internalType: "uint256" },
					{ name: "lpPriceETHD18", type: "uint256", internalType: "uint256" },
					{
						name: "lpPriceWSTETHD18",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "lpPriceBaseTokenD18",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "shouldCloseWithdrawalRequest",
						type: "bool",
						internalType: "bool",
					},
					{
						name: "withdrawalRequest",
						type: "tuple",
						internalType: "struct IVault.WithdrawalRequest",
						components: [
							{ name: "to", type: "address", internalType: "address" },
							{ name: "lpAmount", type: "uint256", internalType: "uint256" },
							{ name: "tokensHash", type: "bytes32", internalType: "bytes32" },
							{
								name: "minAmounts",
								type: "uint256[]",
								internalType: "uint256[]",
							},
							{ name: "deadline", type: "uint256", internalType: "uint256" },
							{ name: "timestamp", type: "uint256", internalType: "uint256" },
						],
					},
					{ name: "isDefi", type: "bool", internalType: "bool" },
				],
			},
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "removeCollector",
		inputs: [],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "renounceRole",
		inputs: [
			{ name: "role", type: "bytes32", internalType: "bytes32" },
			{ name: "callerConfirmation", type: "address", internalType: "address" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "requireAdmin",
		inputs: [{ name: "sender", type: "address", internalType: "address" }],
		outputs: [],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "requireAtLeastOperator",
		inputs: [{ name: "sender", type: "address", internalType: "address" }],
		outputs: [],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "revokeRole",
		inputs: [
			{ name: "role", type: "bytes32", internalType: "bytes32" },
			{ name: "account", type: "address", internalType: "address" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "steth",
		inputs: [],
		outputs: [{ name: "", type: "address", internalType: "address" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "supportsInterface",
		inputs: [{ name: "interfaceId", type: "bytes4", internalType: "bytes4" }],
		outputs: [{ name: "", type: "bool", internalType: "bool" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "susde",
		inputs: [],
		outputs: [{ name: "", type: "address", internalType: "address" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "test",
		inputs: [],
		outputs: [],
		stateMutability: "pure",
	},
	{
		type: "function",
		name: "weth",
		inputs: [],
		outputs: [{ name: "", type: "address", internalType: "address" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "wethOracle",
		inputs: [],
		outputs: [
			{ name: "", type: "address", internalType: "contract IAggregatorV3" },
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "wsteth",
		inputs: [],
		outputs: [{ name: "", type: "address", internalType: "address" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "wstethOracle",
		inputs: [],
		outputs: [
			{ name: "", type: "address", internalType: "contract IAggregatorV3" },
		],
		stateMutability: "view",
	},
	{
		type: "event",
		name: "RoleAdminChanged",
		inputs: [
			{ name: "role", type: "bytes32", indexed: true, internalType: "bytes32" },
			{
				name: "previousAdminRole",
				type: "bytes32",
				indexed: true,
				internalType: "bytes32",
			},
			{
				name: "newAdminRole",
				type: "bytes32",
				indexed: true,
				internalType: "bytes32",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "RoleGranted",
		inputs: [
			{ name: "role", type: "bytes32", indexed: true, internalType: "bytes32" },
			{
				name: "account",
				type: "address",
				indexed: true,
				internalType: "address",
			},
			{
				name: "sender",
				type: "address",
				indexed: true,
				internalType: "address",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "RoleRevoked",
		inputs: [
			{ name: "role", type: "bytes32", indexed: true, internalType: "bytes32" },
			{
				name: "account",
				type: "address",
				indexed: true,
				internalType: "address",
			},
			{
				name: "sender",
				type: "address",
				indexed: true,
				internalType: "address",
			},
		],
		anonymous: false,
	},
	{ type: "error", name: "AccessControlBadConfirmation", inputs: [] },
	{
		type: "error",
		name: "AccessControlUnauthorizedAccount",
		inputs: [
			{ name: "account", type: "address", internalType: "address" },
			{ name: "neededRole", type: "bytes32", internalType: "bytes32" },
		],
	},
	{ type: "error", name: "AddressZero", inputs: [] },
	{ type: "error", name: "Forbidden", inputs: [] },
] as const;
