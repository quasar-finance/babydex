<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pool Metrics</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
    <link rel="stylesheet" href="/static/css/style.css">
    <style>
        .pool-metric-row {
            animation: fadeInUp 0.5s ease-out forwards;
            opacity: 0;
        }
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        .value-animate {
            transition: color 0.3s ease-in-out;
        }
        .value-animate:hover {
            color: #48c7ec; /* Bulma's primary color */
        }
        .header-animate {
            animation: slideInDown 0.4s ease-out backwards;
        }
        @keyframes slideInDown {
            from {
                transform: translateY(-20px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }
    </style>
</head>
<body>
    <section class="hero is-primary is-bold">
        <div class="hero-body">
            <div class="container">
                <h1 class="title header-animate">
                    Pool Metrics
                </h1>
                <h2 class="subtitle header-animate" style="animation-delay: 0.1s;">
                    Real-time Insights
                </h2>
            </div>
        </div>
    </section>
    <section class="section">
        <div class="container">
            {% if pool_metrics %}
            <div class="table-container">
                <table class="table is-bordered is-striped is-fullwidth">
                    <thead>
                        <tr>
                            <th class="header-animate" style="animation-delay: 0.2s;">Pool Address</th>
                            <th class="header-animate" style="animation-delay: 0.3s;">Height</th>
                            <th class="header-animate" style="animation-delay: 0.4s;">Token 0</th>
                            <th class="header-animate" style="animation-delay: 0.5s;">Token 1</th>
                            <th class="header-animate has-text-right" style="animation-delay: 0.6s;">TVL (USD)</th>
                            <th class="header-animate has-text-right" style="animation-delay: 0.7s;">Avg. APR</th>
                            <th class="header-animate" style="animation-delay: 0.8s;">LP Token</th>
                            <th class="header-animate has-text-right" style="animation-delay: 0.9s;">Total Incentives</th>
                            <th class="header-animate" style="animation-delay: 1.0s;">Metric Start Height</th>
                            <th class="header-animate" style="animation-delay: 1.1s;">Metric End Height</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for metric in pool_metrics %}
                        <tr class="pool-metric-row" style="animation-delay: {{ loop.index0 * 0.05 + 1.2 }}s;">
                            <td class="value-animate">{{ metric.pool_address }}</td>
                            <td class="value-animate">{{ metric.height }}</td>
                            <td class="value-animate">{{ metric.token0_balance }}</td>
                            <td class="value-animate">{{ metric.token1_balance }}</td>
                            <td class="has-text-right value-animate">${{ metric.tvl_usd|float }}</td>
                            <td class="has-text-right value-animate">{{ metric.average_apr|float }}%</td>
                            <td class="value-animate">{{ metric.lp_token_address }}</td>
                            <td class="has-text-right value-animate">{{ metric.total_incentives }}</td>
                            <td class="value-animate">{{ metric.metric_start_height|default(value="N/A") }}</td>
                            <td class="value-animate">{{ metric.metric_end_height|default(value="N/A") }}</td>
                        </tr>
                        {% else %}
                        <tr><td class="colspan-10 has-text-centered">No pool metrics available.</td></tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
            {% else %}
            <p class="has-text-grey">Loading pool metrics...</p>
            {% endif %}
        </div>
    </section>
    <footer class="footer">
        <div class="content has-text-centered">
            <p>
                Data fetched from the API.
            </p>
        </div>
    </footer>
</body>
</html>