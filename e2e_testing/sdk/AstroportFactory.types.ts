/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.12.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type PairType = {
  xyk: {};
} | {
  concentrated: {};
} | {
  custom: string;
};
export interface InstantiateMsg {
  coin_registry_address: string;
  fee_address?: string | null;
  incentives_address?: string | null;
  owner: string;
  pair_configs: PairConfig[];
  token_code_id: number;
}
export interface PairConfig {
  code_id: number;
  is_disabled?: boolean;
  is_generator_disabled?: boolean;
  maker_fee_bps: number;
  pair_type: PairType;
  permissioned?: boolean;
  total_fee_bps: number;
}
export type ExecuteMsg = {
  update_config: {
    coin_registry_address?: string | null;
    fee_address?: string | null;
    incentives_address?: string | null;
    token_code_id?: number | null;
  };
} | {
  update_pair_config: {
    config: PairConfig;
  };
} | {
  create_pair: {
    asset_infos: AssetInfo[];
    init_params?: Binary | null;
    pair_type: PairType;
  };
} | {
  propose_new_owner: {
    expires_in: number;
    owner: string;
  };
} | {
  drop_ownership_proposal: {};
} | {
  claim_ownership: {};
};
export type AssetInfo = {
  token: {
    contract_addr: Addr;
  };
} | {
  native_token: {
    denom: string;
  };
};
export type Addr = string;
export type Binary = string;
export type QueryMsg = {
  config: {};
} | {
  pairs_by_asset_infos: {
    asset_infos: AssetInfo[];
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  pair_by_lp_token: {
    lp_token: string;
  };
} | {
  pairs: {
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  fee_info: {
    pair_type: PairType;
  };
} | {
  blacklisted_pair_types: {};
};
export type ArrayOfPairType = PairType[];
export interface ConfigResponse {
  coin_registry_address: Addr;
  fee_address?: Addr | null;
  incentives_address?: Addr | null;
  owner: Addr;
  pair_configs: PairConfig[];
  token_code_id: number;
}
export interface FeeInfoResponse {
  fee_address?: Addr | null;
  maker_fee_bps: number;
  total_fee_bps: number;
}
export interface PairInfo {
  asset_infos: AssetInfo[];
  contract_addr: Addr;
  liquidity_token: string;
  pair_type: PairType;
}
export type ArrayOfPairInfo = PairInfo[];